{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MenuData } from \"../../data/menuData\";\nimport { AddNewUser } from \"../popView/addNewUser/addNewUser\";\nexport let AccountListView = class AccountListView {\n  modalService;\n  accountService;\n  menuData = new MenuData();\n  currentRole = 'Role';\n  currentStatus = 'Status';\n  accountList = [];\n  userRole = 'admin';\n  constructor(modalService, accountService) {\n    this.modalService = modalService;\n    this.accountService = accountService;\n  }\n  ngOnInit() {\n    this.getAllAccount();\n  }\n  getAllAccount() {\n    this.accountService.getAllUser().subscribe(data => {\n      this.accountList = data;\n      console.log(this.accountList);\n    });\n  }\n  filterSetRole(role) {\n    if (role == 'All Accounts') {\n      this.currentRole = 'Role';\n    } else if (role == 'Super Admin') {\n      this.currentRole = 'SuperAdmin';\n    } else if (role == 'Admin Only') {\n      this.currentRole = 'Admin';\n    } else if (role == 'User Only') {\n      this.currentRole = 'User';\n    } else if (role == 'Recruiter Manager') {\n      this.currentRole = 'rAdmin';\n    } else if (role == 'Training Manager') {\n      this.currentRole = 'tAdmin';\n    } else if (role == 'BD Manager') {\n      this.currentRole = 'bdAdmin';\n    } else if (role == 'Business Developer') {\n      this.currentRole = 'BD';\n    } else {\n      this.currentRole = role;\n    }\n  }\n  filterSetStatus(status) {\n    if (status == 'All Status') {\n      this.currentStatus = 'Status';\n    } else {\n      this.currentStatus = status;\n    }\n  }\n  showAddNewAccountView() {\n    this.modalService.show(AddNewUser, {\n      class: 'modal-md popBox-h'\n    });\n  }\n  showAccountDetail(userId) {\n    window.location.href = this.userRole + \"/check/user/detail/\" + userId;\n  }\n};\nAccountListView = __decorate([Component({\n  selector: 'app-account-list',\n  templateUrl: './accountListView.html',\n  styleUrls: ['./accountListView.css']\n})], AccountListView);","map":{"version":3,"names":["Component","MenuData","AddNewUser","AccountListView","modalService","accountService","menuData","currentRole","currentStatus","accountList","userRole","constructor","ngOnInit","getAllAccount","getAllUser","subscribe","data","console","log","filterSetRole","role","filterSetStatus","status","showAddNewAccountView","show","class","showAccountDetail","userId","window","location","href","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/src/app/view/accountList/accountListView.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {MenuData} from \"../../data/menuData\";\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport {ConfirmViewComponent} from \"../popView/confirm-view/confirm-view.component\";\nimport {AddNewUser} from \"../popView/addNewUser/addNewUser\";\nimport { User } from 'src/app/model/user';\nimport { AccountService } from 'src/app/service/account.service';\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './accountListView.html',\n  styleUrls: ['./accountListView.css']\n})\nexport class AccountListView\n{\n  menuData:MenuData = new MenuData();\n  currentRole:string = 'Role';\n  currentStatus:string = 'Status';\n  accountList:User[] = [];\n  userRole:string = 'admin';\n\n  constructor(private modalService: BsModalService, private accountService:AccountService )\n  {\n  }\n  ngOnInit()\n  {\n    this.getAllAccount();\n  }\n  getAllAccount(){\n    this.accountService.getAllUser().subscribe(data => {\n      this.accountList = data;\n      console.log(this.accountList);\n    })\n  }\n  filterSetRole(role:string)\n  {\n    if(role == 'All Accounts')\n    {\n      this.currentRole = 'Role'\n    }\n    else if(role == 'Super Admin')\n    {\n      this.currentRole = 'SuperAdmin'\n    }\n    else if(role == 'Admin Only')\n    {\n      this.currentRole = 'Admin'\n    }\n    else if(role == 'User Only')\n    {\n      this.currentRole = 'User'\n    }\n    else if(role == 'Recruiter Manager')\n    {\n      this.currentRole = 'rAdmin'\n    }\n    else if(role == 'Training Manager')\n    {\n      this.currentRole = 'tAdmin'\n    }\n    else if(role == 'BD Manager')\n    {\n      this.currentRole = 'bdAdmin'\n    }\n    else if(role == 'Business Developer')\n    {\n      this.currentRole = 'BD'\n    }\n    else\n    {\n      this.currentRole = role;\n    }\n  }\n\n  filterSetStatus(status:string)\n  {\n    if(status == 'All Status')\n    {\n      this.currentStatus = 'Status';\n    }\n    else\n    {\n      this.currentStatus = status;\n    }\n  }\n\n  showAddNewAccountView()\n  {\n    this.modalService.show(AddNewUser, {class: 'modal-md popBox-h'});\n  }\n\n  showAccountDetail(userId:number)\n  {\n    window.location.href = this.userRole + \"/check/user/detail/\" +userId;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAQC,QAAQ,QAAO,qBAAqB;AAG5C,SAAQC,UAAU,QAAO,kCAAkC;AAQpD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAQNC,YAAA;EAAsCC,cAAA;EAN1DC,QAAQ,GAAY,IAAIL,QAAQ,EAAE;EAClCM,WAAW,GAAU,MAAM;EAC3BC,aAAa,GAAU,QAAQ;EAC/BC,WAAW,GAAU,EAAE;EACvBC,QAAQ,GAAU,OAAO;EAEzBC,YAAoBP,YAA4B,EAAUC,cAA6B;IAAnE,KAAAD,YAAY,GAAZA,YAAY;IAA0B,KAAAC,cAAc,GAAdA,cAAc;EAExE;EACAO,QAAQA,CAAA;IAEN,IAAI,CAACC,aAAa,EAAE;EACtB;EACAA,aAAaA,CAAA;IACX,IAAI,CAACR,cAAc,CAACS,UAAU,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACP,WAAW,GAAGO,IAAI;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,WAAW,CAAC;IAC/B,CAAC,CAAC;EACJ;EACAU,aAAaA,CAACC,IAAW;IAEvB,IAAGA,IAAI,IAAI,cAAc,EACzB;MACE,IAAI,CAACb,WAAW,GAAG,MAAM;KAC1B,MACI,IAAGa,IAAI,IAAI,aAAa,EAC7B;MACE,IAAI,CAACb,WAAW,GAAG,YAAY;KAChC,MACI,IAAGa,IAAI,IAAI,YAAY,EAC5B;MACE,IAAI,CAACb,WAAW,GAAG,OAAO;KAC3B,MACI,IAAGa,IAAI,IAAI,WAAW,EAC3B;MACE,IAAI,CAACb,WAAW,GAAG,MAAM;KAC1B,MACI,IAAGa,IAAI,IAAI,mBAAmB,EACnC;MACE,IAAI,CAACb,WAAW,GAAG,QAAQ;KAC5B,MACI,IAAGa,IAAI,IAAI,kBAAkB,EAClC;MACE,IAAI,CAACb,WAAW,GAAG,QAAQ;KAC5B,MACI,IAAGa,IAAI,IAAI,YAAY,EAC5B;MACE,IAAI,CAACb,WAAW,GAAG,SAAS;KAC7B,MACI,IAAGa,IAAI,IAAI,oBAAoB,EACpC;MACE,IAAI,CAACb,WAAW,GAAG,IAAI;KACxB,MAED;MACE,IAAI,CAACA,WAAW,GAAGa,IAAI;;EAE3B;EAEAC,eAAeA,CAACC,MAAa;IAE3B,IAAGA,MAAM,IAAI,YAAY,EACzB;MACE,IAAI,CAACd,aAAa,GAAG,QAAQ;KAC9B,MAED;MACE,IAAI,CAACA,aAAa,GAAGc,MAAM;;EAE/B;EAEAC,qBAAqBA,CAAA;IAEnB,IAAI,CAACnB,YAAY,CAACoB,IAAI,CAACtB,UAAU,EAAE;MAACuB,KAAK,EAAE;IAAmB,CAAC,CAAC;EAClE;EAEAC,iBAAiBA,CAACC,MAAa;IAE7BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACpB,QAAQ,GAAG,qBAAqB,GAAEiB,MAAM;EACtE;CACD;AAlFYxB,eAAe,GAAA4B,UAAA,EAL3B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW/B,eAAe,CAkF3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}