{"ast":null,"code":"import _asyncToGenerator from \"/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      grab = container.actualOptions.interactivity.modes.grab;\n    if (!grab) {\n      return;\n    }\n    container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n  }\n  interact() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const container = _this.container,\n        options = container.actualOptions,\n        interactivity = options.interactivity;\n      if (!interactivity.modes.grab || !interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent) {\n        return;\n      }\n      const mousePos = container.interactivity.mouse.position;\n      if (!mousePos) {\n        return;\n      }\n      const distance = container.retina.grabModeDistance;\n      if (!distance || distance < 0) {\n        return;\n      }\n      const query = container.particles.quadTree.queryCircle(mousePos, distance, p => _this.isEnabled(p));\n      for (const particle of query) {\n        const pos = particle.getPosition(),\n          pointDistance = getDistance(pos, mousePos);\n        if (pointDistance > distance) {\n          continue;\n        }\n        const grabLineOptions = interactivity.modes.grab.links,\n          lineOpacity = grabLineOptions.opacity,\n          opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n        if (opacityLine <= 0) {\n          continue;\n        }\n        const optColor = grabLineOptions.color ?? particle.options.links?.color;\n        if (!container.particles.grabLineColor && optColor) {\n          const linksOptions = interactivity.modes.grab.links;\n          container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        }\n        const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n        if (!colorLine) {\n          continue;\n        }\n        drawGrab(container, particle, colorLine, opacityLine, mousePos);\n      }\n    })();\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.grab) {\n      options.grab = new Grab();\n    }\n    for (const source of sources) {\n      options.grab.load(source?.grab);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","getDistance","getLinkColor","getLinkRandomColor","isInArray","mouseMoveEvent","Grab","drawGrab","Grabber","constructor","container","clear","init","grab","actualOptions","interactivity","modes","retina","grabModeDistance","distance","pixelRatio","interact","_this","_asyncToGenerator","options","events","onHover","enable","status","mousePos","mouse","position","query","particles","quadTree","queryCircle","p","isEnabled","particle","pos","getPosition","pointDistance","grabLineOptions","links","lineOpacity","opacity","opacityLine","optColor","color","grabLineColor","linksOptions","blink","consent","colorLine","undefined","mode","loadModeOptions","sources","source","load","reset"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js"],"sourcesContent":["import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}