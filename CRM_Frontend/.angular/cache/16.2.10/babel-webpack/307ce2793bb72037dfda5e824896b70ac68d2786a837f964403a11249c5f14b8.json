{"ast":null,"code":"import _asyncToGenerator from \"/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n  return {\n    value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nconst defaultPathGeneratorKey = \"default\",\n  defaultPathGenerator = {\n    generate: p => p.velocity,\n    init: () => {},\n    update: () => {},\n    reset: () => {}\n  };\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    var _this = this;\n    this.id = id;\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        (entry.isIntersecting ? this.play : this.pause)();\n      }\n    };\n    this._nextFrame = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (timestamp) {\n        try {\n          if (!_this.smooth && _this.lastFrameTime !== undefined && timestamp < _this.lastFrameTime + 1000 / _this.fpsLimit) {\n            _this.draw(false);\n            return;\n          }\n          _this.lastFrameTime ??= timestamp;\n          const delta = initDelta(timestamp - _this.lastFrameTime, _this.fpsLimit, _this.smooth);\n          _this.addLifeTime(delta.value);\n          _this.lastFrameTime = timestamp;\n          if (delta.value > 1000) {\n            _this.draw(false);\n            return;\n          }\n          yield _this.particles.draw(delta);\n          if (!_this.alive()) {\n            _this.destroy();\n            return;\n          }\n          if (_this.getAnimationStatus()) {\n            _this.draw(false);\n          }\n        } catch (e) {\n          getLogger().error(`${errorPrefix} in animation loop`, e);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n      clickOrTouchHandler(e, pos, 1);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, drawer] of this.drawers) {\n      drawer.destroy && drawer.destroy(this);\n    }\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n    this._engine.plugins.destroy(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this);\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    var _this2 = this;\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    this._drawAnimationFrame = requestAnimationFrame( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (timestamp) {\n        if (refreshTime) {\n          _this2.lastFrameTime = undefined;\n          refreshTime = false;\n        }\n        yield _this2._nextFrame(timestamp);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n  export(type, options = {}) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      for (const [, plugin] of _this3.plugins) {\n        if (!plugin.export) {\n          continue;\n        }\n        const res = yield plugin.export(type, options);\n        if (!res.supported) {\n          continue;\n        }\n        return res.blob;\n      }\n      getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    })();\n  }\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode && plugin.handleClickMode(mode);\n    }\n  }\n  init() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!guardCheck(_this4)) {\n        return;\n      }\n      const shapes = _this4._engine.plugins.getSupportedShapes();\n      for (const type of shapes) {\n        const drawer = _this4._engine.plugins.getShapeDrawer(type);\n        if (drawer) {\n          _this4.drawers.set(type, drawer);\n        }\n      }\n      _this4._options = loadContainerOptions(_this4._engine, _this4, _this4._initialSourceOptions, _this4.sourceOptions);\n      _this4.actualOptions = loadContainerOptions(_this4._engine, _this4, _this4._options);\n      const availablePlugins = _this4._engine.plugins.getAvailablePlugins(_this4);\n      for (const [id, plugin] of availablePlugins) {\n        _this4.plugins.set(id, plugin);\n      }\n      _this4.retina.init();\n      yield _this4.canvas.init();\n      _this4.updateActualOptions();\n      _this4.canvas.initBackground();\n      _this4.canvas.resize();\n      _this4.zLayers = _this4.actualOptions.zLayers;\n      _this4._duration = getRangeValue(_this4.actualOptions.duration) * 1000;\n      _this4._delay = getRangeValue(_this4.actualOptions.delay) * 1000;\n      _this4._lifeTime = 0;\n      _this4.fpsLimit = _this4.actualOptions.fpsLimit > 0 ? _this4.actualOptions.fpsLimit : 120;\n      _this4.smooth = _this4.actualOptions.smooth;\n      for (const [, drawer] of _this4.drawers) {\n        drawer.init && (yield drawer.init(_this4));\n      }\n      for (const [, plugin] of _this4.plugins) {\n        plugin.init && (yield plugin.init());\n      }\n      _this4._engine.dispatchEvent(\"containerInit\", {\n        container: _this4\n      });\n      _this4.particles.init();\n      _this4.particles.setDensity();\n      for (const [, plugin] of _this4.plugins) {\n        plugin.particlesSetup && plugin.particlesSetup();\n      }\n      _this4._engine.dispatchEvent(\"particlesSetup\", {\n        container: _this4\n      });\n    })();\n  }\n  loadTheme(name) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!guardCheck(_this5)) {\n        return;\n      }\n      _this5._currentTheme = name;\n      yield _this5.refresh();\n    })();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.pause && plugin.pause();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate || false);\n  }\n  refresh() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!guardCheck(_this6)) {\n        return;\n      }\n      _this6.stop();\n      return _this6.start();\n    })();\n  }\n  reset() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!guardCheck(_this7)) {\n        return;\n      }\n      _this7._initialSourceOptions = undefined;\n      _this7._options = loadContainerOptions(_this7._engine, _this7);\n      _this7.actualOptions = loadContainerOptions(_this7._engine, _this7, _this7._options);\n      return _this7.refresh();\n    })();\n  }\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.setPath(noiseOrGenerator, init, update);\n  }\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n    const pathGenerator = {\n      ...defaultPathGenerator\n    };\n    if (isFunction(pathOrGenerator)) {\n      pathGenerator.generate = pathOrGenerator;\n      if (init) {\n        pathGenerator.init = init;\n      }\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n  start() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (!guardCheck(_this8) || _this8.started) {\n        return;\n      }\n      yield _this8.init();\n      _this8.started = true;\n      yield new Promise(resolve => {\n        _this8._delayTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n          _this8._eventListeners.addListeners();\n          if (_this8.interactivity.element instanceof HTMLElement && _this8._intersectionObserver) {\n            _this8._intersectionObserver.observe(_this8.interactivity.element);\n          }\n          for (const [, plugin] of _this8.plugins) {\n            plugin.start && (yield plugin.start());\n          }\n          _this8._engine.dispatchEvent(\"containerStarted\", {\n            container: _this8\n          });\n          _this8.play();\n          resolve();\n        }), _this8._delay);\n      });\n    })();\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.stop && plugin.stop();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["getLogger","isFunction","Canvas","EventListeners","Options","Particles","Retina","errorPrefix","getRangeValue","loadOptions","guardCheck","container","destroyed","initDelta","value","fpsLimit","smooth","factor","loadContainerOptions","engine","sourceOptionsArr","options","defaultPathGeneratorKey","defaultPathGenerator","generate","p","velocity","init","update","reset","Container","constructor","id","sourceOptions","_this","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","_ref","_asyncToGenerator","timestamp","lastFrameTime","undefined","draw","delta","addLifeTime","particles","alive","destroy","getAnimationStatus","e","error","_x","apply","arguments","_engine","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","Map","mouse","clicking","inside","plugins","drawers","_options","_eventListeners","IntersectionObserver","_intersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","length","changedTouches","canvasRect","getBoundingClientRect","left","top","Math","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","force","_this2","refreshTime","_drawAnimationFrame","requestAnimationFrame","_ref2","_x2","export","type","_this3","plugin","res","supported","blob","handleClickMode","mode","_this4","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","setDensity","particlesSetup","loadTheme","name","_this5","_currentTheme","refresh","cancelAnimationFrame","needsUpdate","autoPlay","_this6","start","_this7","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","oldGenerator","_this8","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/tsparticles-engine/esm/Core/Container.js"],"sourcesContent":["import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACtD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,UAAUA,CAACC,SAAS,EAAE;EAC3B,OAAOA,SAAS,IAAI,CAACA,SAAS,CAACC,SAAS;AAC5C;AACA,SAASC,SAASA,CAACC,KAAK,EAAEC,QAAQ,GAAG,EAAE,EAAEC,MAAM,GAAG,KAAK,EAAE;EACrD,OAAO;IACHF,KAAK;IACLG,MAAM,EAAED,MAAM,GAAG,EAAE,GAAGD,QAAQ,GAAI,EAAE,GAAGD,KAAK,GAAI;EACpD,CAAC;AACL;AACA,SAASI,oBAAoBA,CAACC,MAAM,EAAER,SAAS,EAAE,GAAGS,gBAAgB,EAAE;EAClE,MAAMC,OAAO,GAAG,IAAIjB,OAAO,CAACe,MAAM,EAAER,SAAS,CAAC;EAC9CF,WAAW,CAACY,OAAO,EAAE,GAAGD,gBAAgB,CAAC;EACzC,OAAOC,OAAO;AAClB;AACA,MAAMC,uBAAuB,GAAG,SAAS;EAAEC,oBAAoB,GAAG;IAC9DC,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,QAAQ;IAC3BC,IAAI,EAAEA,CAAA,KAAM,CACZ,CAAC;IACDC,MAAM,EAAEA,CAAA,KAAM,CACd,CAAC;IACDC,KAAK,EAAEA,CAAA,KAAM,CACb;EACJ,CAAC;AACD,OAAO,MAAMC,SAAS,CAAC;EACnBC,WAAWA,CAACZ,MAAM,EAAEa,EAAE,EAAEC,aAAa,EAAE;IAAA,IAAAC,KAAA;IACnC,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACG,oBAAoB,GAAIC,OAAO,IAAK;MACrC,IAAI,CAAC1B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC2B,aAAa,CAACC,sBAAsB,EAAE;QACjE;MACJ;MACA,KAAK,MAAMC,KAAK,IAAIH,OAAO,EAAE;QACzB,IAAIG,KAAK,CAACC,MAAM,KAAK,IAAI,CAACC,aAAa,CAACC,OAAO,EAAE;UAC7C;QACJ;QACA,CAACH,KAAK,CAACI,cAAc,GAAG,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,KAAK,EAAE,CAAC;MACrD;IACJ,CAAC;IACD,IAAI,CAACC,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,SAAS,EAAK;QACnC,IAAI;UACA,IAAI,CAACf,KAAI,CAAClB,MAAM,IACZkB,KAAI,CAACgB,aAAa,KAAKC,SAAS,IAChCF,SAAS,GAAGf,KAAI,CAACgB,aAAa,GAAG,IAAI,GAAGhB,KAAI,CAACnB,QAAQ,EAAE;YACvDmB,KAAI,CAACkB,IAAI,CAAC,KAAK,CAAC;YAChB;UACJ;UACAlB,KAAI,CAACgB,aAAa,KAAKD,SAAS;UAChC,MAAMI,KAAK,GAAGxC,SAAS,CAACoC,SAAS,GAAGf,KAAI,CAACgB,aAAa,EAAEhB,KAAI,CAACnB,QAAQ,EAAEmB,KAAI,CAAClB,MAAM,CAAC;UACnFkB,KAAI,CAACoB,WAAW,CAACD,KAAK,CAACvC,KAAK,CAAC;UAC7BoB,KAAI,CAACgB,aAAa,GAAGD,SAAS;UAC9B,IAAII,KAAK,CAACvC,KAAK,GAAG,IAAI,EAAE;YACpBoB,KAAI,CAACkB,IAAI,CAAC,KAAK,CAAC;YAChB;UACJ;UACA,MAAMlB,KAAI,CAACqB,SAAS,CAACH,IAAI,CAACC,KAAK,CAAC;UAChC,IAAI,CAACnB,KAAI,CAACsB,KAAK,CAAC,CAAC,EAAE;YACftB,KAAI,CAACuB,OAAO,CAAC,CAAC;YACd;UACJ;UACA,IAAIvB,KAAI,CAACwB,kBAAkB,CAAC,CAAC,EAAE;YAC3BxB,KAAI,CAACkB,IAAI,CAAC,KAAK,CAAC;UACpB;QACJ,CAAC,CACD,OAAOO,CAAC,EAAE;UACN3D,SAAS,CAAC,CAAC,CAAC4D,KAAK,CAAE,GAAErD,WAAY,oBAAmB,EAAEoD,CAAC,CAAC;QAC5D;MACJ,CAAC;MAAA,iBAAAE,EAAA;QAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;IAAA;IACD,IAAI,CAACC,OAAO,GAAG7C,MAAM;IACrB,IAAI,CAACJ,QAAQ,GAAG,GAAG;IACnB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACiD,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACzD,SAAS,GAAG,KAAK;IACtB,IAAI,CAAC0D,OAAO,GAAG,IAAI;IACnB,IAAI,CAACpB,aAAa,GAAG,CAAC;IACtB,IAAI,CAACqB,OAAO,GAAG,GAAG;IAClB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,cAAc,GAAGxC,aAAa;IACnC,IAAI,CAACyC,qBAAqB,GAAGzC,aAAa;IAC1C,IAAI,CAAC0C,MAAM,GAAG,IAAIrE,MAAM,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACsE,MAAM,GAAG,IAAI1E,MAAM,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACqD,SAAS,GAAG,IAAIlD,SAAS,CAAC,IAAI,CAAC2D,OAAO,EAAE,IAAI,CAAC;IAClD,IAAI,CAACa,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACrC,aAAa,GAAG;MACjBsC,KAAK,EAAE;QACHC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE;MACZ;IACJ,CAAC;IACD,IAAI,CAACC,OAAO,GAAG,IAAIJ,GAAG,CAAC,CAAC;IACxB,IAAI,CAACK,OAAO,GAAG,IAAIL,GAAG,CAAC,CAAC;IACxB,IAAI,CAACM,QAAQ,GAAGlE,oBAAoB,CAAC,IAAI,CAAC8C,OAAO,EAAE,IAAI,CAAC;IACxD,IAAI,CAAC3B,aAAa,GAAGnB,oBAAoB,CAAC,IAAI,CAAC8C,OAAO,EAAE,IAAI,CAAC;IAC7D,IAAI,CAACqB,eAAe,GAAG,IAAIlF,cAAc,CAAC,IAAI,CAAC;IAC/C,IAAI,OAAOmF,oBAAoB,KAAK,WAAW,IAAIA,oBAAoB,EAAE;MACrE,IAAI,CAACC,qBAAqB,GAAG,IAAID,oBAAoB,CAAElD,OAAO,IAAK,IAAI,CAACD,oBAAoB,CAACC,OAAO,CAAC,CAAC;IAC1G;IACA,IAAI,CAAC4B,OAAO,CAACwB,aAAa,CAAC,gBAAgB,EAAE;MAAE7E,SAAS,EAAE;IAAK,CAAC,CAAC;EACrE;EACA,IAAIU,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAAC+D,QAAQ;EACxB;EACA,IAAInD,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACwC,cAAc;EAC9B;EACAgB,eAAeA,CAACC,QAAQ,EAAE;IACtB,IAAI,CAAChF,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAMiF,EAAE,GAAG,IAAI,CAAClD,aAAa,CAACC,OAAO;IACrC,IAAI,CAACiD,EAAE,EAAE;MACL;IACJ;IACA,MAAMC,mBAAmB,GAAGA,CAACjC,CAAC,EAAEkC,GAAG,EAAEC,MAAM,KAAK;MAC5C,IAAI,CAACpF,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,MAAMqF,OAAO,GAAG,IAAI,CAACpB,MAAM,CAACqB,UAAU;QAAEC,SAAS,GAAG;UAChDC,CAAC,EAAEL,GAAG,CAACK,CAAC,GAAGH,OAAO;UAClBI,CAAC,EAAEN,GAAG,CAACM,CAAC,GAAGJ;QACf,CAAC;QAAExC,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC6C,QAAQ,CAACC,WAAW,CAACJ,SAAS,EAAEH,MAAM,GAAGC,OAAO,CAAC;MAC/EL,QAAQ,CAAC/B,CAAC,EAAEJ,SAAS,CAAC;IAC1B,CAAC;IACD,MAAM+C,YAAY,GAAI3C,CAAC,IAAK;MACxB,IAAI,CAACjD,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,MAAM6F,UAAU,GAAG5C,CAAC;QAAEkC,GAAG,GAAG;UACxBK,CAAC,EAAEK,UAAU,CAACC,OAAO,IAAID,UAAU,CAACE,OAAO;UAC3CN,CAAC,EAAEI,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI;QACxC,CAAC;MACDf,mBAAmB,CAACjC,CAAC,EAAEkC,GAAG,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,IAAI,CAAClG,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACAmG,OAAO,GAAG,IAAI;MACdC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,IAAI,CAACrG,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACAoG,UAAU,GAAG,IAAI;IACrB,CAAC;IACD,MAAME,eAAe,GAAIrD,CAAC,IAAK;MAC3B,IAAI,CAACjD,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,IAAImG,OAAO,IAAI,CAACC,UAAU,EAAE;QACxB,MAAMG,UAAU,GAAGtD,CAAC;QACpB,IAAIuD,SAAS,GAAGD,UAAU,CAACE,OAAO,CAACF,UAAU,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;QACjE,IAAI,CAACF,SAAS,EAAE;UACZA,SAAS,GAAGD,UAAU,CAACI,cAAc,CAACJ,UAAU,CAACI,cAAc,CAACD,MAAM,GAAG,CAAC,CAAC;UAC3E,IAAI,CAACF,SAAS,EAAE;YACZ;UACJ;QACJ;QACA,MAAMxE,OAAO,GAAG,IAAI,CAACkC,MAAM,CAAClC,OAAO;UAAE4E,UAAU,GAAG5E,OAAO,GAAGA,OAAO,CAAC6E,qBAAqB,CAAC,CAAC,GAAGpE,SAAS;UAAE0C,GAAG,GAAG;YAC3GK,CAAC,EAAEgB,SAAS,CAACT,OAAO,IAAIa,UAAU,GAAGA,UAAU,CAACE,IAAI,GAAG,CAAC,CAAC;YACzDrB,CAAC,EAAEe,SAAS,CAACP,OAAO,IAAIW,UAAU,GAAGA,UAAU,CAACG,GAAG,GAAG,CAAC;UAC3D,CAAC;QACD7B,mBAAmB,CAACjC,CAAC,EAAEkC,GAAG,EAAE6B,IAAI,CAACC,GAAG,CAACT,SAAS,CAACU,OAAO,EAAEV,SAAS,CAACW,OAAO,CAAC,CAAC;MAC/E;MACAhB,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,MAAMgB,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAI,CAACpH,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACAmG,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,IAAID,OAAO,GAAG,KAAK;MAAEC,UAAU,GAAG,KAAK;IACvCnB,EAAE,CAACoC,gBAAgB,CAAC,OAAO,EAAEzB,YAAY,CAAC;IAC1CX,EAAE,CAACoC,gBAAgB,CAAC,YAAY,EAAEnB,iBAAiB,CAAC;IACpDjB,EAAE,CAACoC,gBAAgB,CAAC,WAAW,EAAEhB,gBAAgB,CAAC;IAClDpB,EAAE,CAACoC,gBAAgB,CAAC,UAAU,EAAEf,eAAe,CAAC;IAChDrB,EAAE,CAACoC,gBAAgB,CAAC,aAAa,EAAED,kBAAkB,CAAC;EAC1D;EACAxE,WAAWA,CAACxC,KAAK,EAAE;IACf,IAAI,CAACqD,SAAS,IAAIrD,KAAK;EAC3B;EACAkH,OAAOA,CAACC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,GAAG,KAAK,EAAE;IACtC,IAAI,CAACzH,UAAU,CAAC,IAAI,CAAC,IAAK,CAACyH,QAAQ,IAAI,IAAI,CAACtD,cAAc,CAACuD,GAAG,CAACH,GAAG,CAAE,EAAE;MAClE,OAAO,KAAK;IAChB;IACA,IAAI,CAACpD,cAAc,CAACwD,GAAG,CAACJ,GAAG,EAAEC,SAAS,IAAI3G,oBAAoB,CAAC;IAC/D,OAAO,IAAI;EACf;EACAiC,KAAKA,CAAA,EAAG;IACJ,OAAO,CAAC,IAAI,CAACU,SAAS,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACD,SAAS;EAC9D;EACAT,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC/C,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAAC4H,IAAI,CAAC,CAAC;IACX,IAAI,CAAC/E,SAAS,CAACE,OAAO,CAAC,CAAC;IACxB,IAAI,CAACmB,MAAM,CAACnB,OAAO,CAAC,CAAC;IACrB,KAAK,MAAM,GAAG8E,MAAM,CAAC,IAAI,IAAI,CAACpD,OAAO,EAAE;MACnCoD,MAAM,CAAC9E,OAAO,IAAI8E,MAAM,CAAC9E,OAAO,CAAC,IAAI,CAAC;IAC1C;IACA,KAAK,MAAMwE,GAAG,IAAI,IAAI,CAAC9C,OAAO,CAACqD,IAAI,CAAC,CAAC,EAAE;MACnC,IAAI,CAACrD,OAAO,CAACsD,MAAM,CAACR,GAAG,CAAC;IAC5B;IACA,IAAI,CAACjE,OAAO,CAACkB,OAAO,CAACzB,OAAO,CAAC,IAAI,CAAC;IAClC,IAAI,CAAC7C,SAAS,GAAG,IAAI;IACrB,MAAM8H,OAAO,GAAG,IAAI,CAAC1E,OAAO,CAAC2E,GAAG,CAAC,CAAC;MAAEC,GAAG,GAAGF,OAAO,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC;IAC9E,IAAIF,GAAG,IAAI,CAAC,EAAE;MACVF,OAAO,CAACK,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC5E,OAAO,CAACwB,aAAa,CAAC,oBAAoB,EAAE;MAAE7E,SAAS,EAAE;IAAK,CAAC,CAAC;EACzE;EACAyC,IAAIA,CAAC4F,KAAK,EAAE;IAAA,IAAAC,MAAA;IACR,IAAI,CAACvI,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAIwI,WAAW,GAAGF,KAAK;IACvB,IAAI,CAACG,mBAAmB,GAAGC,qBAAqB;MAAA,IAAAC,KAAA,GAAArG,iBAAA,CAAC,WAAOC,SAAS,EAAK;QAClE,IAAIiG,WAAW,EAAE;UACbD,MAAI,CAAC/F,aAAa,GAAGC,SAAS;UAC9B+F,WAAW,GAAG,KAAK;QACvB;QACA,MAAMD,MAAI,CAACnG,UAAU,CAACG,SAAS,CAAC;MACpC,CAAC;MAAA,iBAAAqG,GAAA;QAAA,OAAAD,KAAA,CAAAvF,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EACN;EACMwF,MAAMA,CAACC,IAAI,EAAEnI,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA,IAAAoI,MAAA;IAAA,OAAAzG,iBAAA;MAC7B,KAAK,MAAM,GAAG0G,MAAM,CAAC,IAAID,MAAI,CAACvE,OAAO,EAAE;QACnC,IAAI,CAACwE,MAAM,CAACH,MAAM,EAAE;UAChB;QACJ;QACA,MAAMI,GAAG,SAASD,MAAM,CAACH,MAAM,CAACC,IAAI,EAAEnI,OAAO,CAAC;QAC9C,IAAI,CAACsI,GAAG,CAACC,SAAS,EAAE;UAChB;QACJ;QACA,OAAOD,GAAG,CAACE,IAAI;MACnB;MACA7J,SAAS,CAAC,CAAC,CAAC4D,KAAK,CAAE,GAAErD,WAAY,8BAA6BiJ,IAAK,YAAW,CAAC;IAAC;EACpF;EACA9F,kBAAkBA,CAAA,EAAG;IACjB,OAAO,CAAC,IAAI,CAACY,OAAO,IAAI,CAAC,IAAI,CAACE,UAAU,IAAI9D,UAAU,CAAC,IAAI,CAAC;EAChE;EACAoJ,eAAeA,CAACC,IAAI,EAAE;IAClB,IAAI,CAACrJ,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAAC6C,SAAS,CAACuG,eAAe,CAACC,IAAI,CAAC;IACpC,KAAK,MAAM,GAAGL,MAAM,CAAC,IAAI,IAAI,CAACxE,OAAO,EAAE;MACnCwE,MAAM,CAACI,eAAe,IAAIJ,MAAM,CAACI,eAAe,CAACC,IAAI,CAAC;IAC1D;EACJ;EACMpI,IAAIA,CAAA,EAAG;IAAA,IAAAqI,MAAA;IAAA,OAAAhH,iBAAA;MACT,IAAI,CAACtC,UAAU,CAACsJ,MAAI,CAAC,EAAE;QACnB;MACJ;MACA,MAAMC,MAAM,GAAGD,MAAI,CAAChG,OAAO,CAACkB,OAAO,CAACgF,kBAAkB,CAAC,CAAC;MACxD,KAAK,MAAMV,IAAI,IAAIS,MAAM,EAAE;QACvB,MAAM1B,MAAM,GAAGyB,MAAI,CAAChG,OAAO,CAACkB,OAAO,CAACiF,cAAc,CAACX,IAAI,CAAC;QACxD,IAAIjB,MAAM,EAAE;UACRyB,MAAI,CAAC7E,OAAO,CAACkD,GAAG,CAACmB,IAAI,EAAEjB,MAAM,CAAC;QAClC;MACJ;MACAyB,MAAI,CAAC5E,QAAQ,GAAGlE,oBAAoB,CAAC8I,MAAI,CAAChG,OAAO,EAAEgG,MAAI,EAAEA,MAAI,CAACtF,qBAAqB,EAAEsF,MAAI,CAAC/H,aAAa,CAAC;MACxG+H,MAAI,CAAC3H,aAAa,GAAGnB,oBAAoB,CAAC8I,MAAI,CAAChG,OAAO,EAAEgG,MAAI,EAAEA,MAAI,CAAC5E,QAAQ,CAAC;MAC5E,MAAMgF,gBAAgB,GAAGJ,MAAI,CAAChG,OAAO,CAACkB,OAAO,CAACmF,mBAAmB,CAACL,MAAI,CAAC;MACvE,KAAK,MAAM,CAAChI,EAAE,EAAE0H,MAAM,CAAC,IAAIU,gBAAgB,EAAE;QACzCJ,MAAI,CAAC9E,OAAO,CAACmD,GAAG,CAACrG,EAAE,EAAE0H,MAAM,CAAC;MAChC;MACAM,MAAI,CAACrF,MAAM,CAAChD,IAAI,CAAC,CAAC;MAClB,MAAMqI,MAAI,CAACpF,MAAM,CAACjD,IAAI,CAAC,CAAC;MACxBqI,MAAI,CAACM,mBAAmB,CAAC,CAAC;MAC1BN,MAAI,CAACpF,MAAM,CAAC2F,cAAc,CAAC,CAAC;MAC5BP,MAAI,CAACpF,MAAM,CAAC4F,MAAM,CAAC,CAAC;MACpBR,MAAI,CAACzF,OAAO,GAAGyF,MAAI,CAAC3H,aAAa,CAACkC,OAAO;MACzCyF,MAAI,CAAC9F,SAAS,GAAG1D,aAAa,CAACwJ,MAAI,CAAC3H,aAAa,CAACoI,QAAQ,CAAC,GAAG,IAAI;MAClET,MAAI,CAAC/F,MAAM,GAAGzD,aAAa,CAACwJ,MAAI,CAAC3H,aAAa,CAACqI,KAAK,CAAC,GAAG,IAAI;MAC5DV,MAAI,CAAC7F,SAAS,GAAG,CAAC;MAClB6F,MAAI,CAACjJ,QAAQ,GAAGiJ,MAAI,CAAC3H,aAAa,CAACtB,QAAQ,GAAG,CAAC,GAAGiJ,MAAI,CAAC3H,aAAa,CAACtB,QAAQ,GAAG,GAAG;MACnFiJ,MAAI,CAAChJ,MAAM,GAAGgJ,MAAI,CAAC3H,aAAa,CAACrB,MAAM;MACvC,KAAK,MAAM,GAAGuH,MAAM,CAAC,IAAIyB,MAAI,CAAC7E,OAAO,EAAE;QACnCoD,MAAM,CAAC5G,IAAI,WAAW4G,MAAM,CAAC5G,IAAI,CAACqI,MAAI,CAAC,CAAC;MAC5C;MACA,KAAK,MAAM,GAAGN,MAAM,CAAC,IAAIM,MAAI,CAAC9E,OAAO,EAAE;QACnCwE,MAAM,CAAC/H,IAAI,WAAW+H,MAAM,CAAC/H,IAAI,CAAC,CAAC,CAAC;MACxC;MACAqI,MAAI,CAAChG,OAAO,CAACwB,aAAa,CAAC,eAAe,EAAE;QAAE7E,SAAS,EAAEqJ;MAAK,CAAC,CAAC;MAChEA,MAAI,CAACzG,SAAS,CAAC5B,IAAI,CAAC,CAAC;MACrBqI,MAAI,CAACzG,SAAS,CAACoH,UAAU,CAAC,CAAC;MAC3B,KAAK,MAAM,GAAGjB,MAAM,CAAC,IAAIM,MAAI,CAAC9E,OAAO,EAAE;QACnCwE,MAAM,CAACkB,cAAc,IAAIlB,MAAM,CAACkB,cAAc,CAAC,CAAC;MACpD;MACAZ,MAAI,CAAChG,OAAO,CAACwB,aAAa,CAAC,gBAAgB,EAAE;QAAE7E,SAAS,EAAEqJ;MAAK,CAAC,CAAC;IAAC;EACtE;EACMa,SAASA,CAACC,IAAI,EAAE;IAAA,IAAAC,MAAA;IAAA,OAAA/H,iBAAA;MAClB,IAAI,CAACtC,UAAU,CAACqK,MAAI,CAAC,EAAE;QACnB;MACJ;MACAA,MAAI,CAACC,aAAa,GAAGF,IAAI;MACzB,MAAMC,MAAI,CAACE,OAAO,CAAC,CAAC;IAAC;EACzB;EACApI,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACnC,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,IAAI,CAACyI,mBAAmB,KAAKhG,SAAS,EAAE;MACxC+H,oBAAoB,CAAC,IAAI,CAAC/B,mBAAmB,CAAC;MAC9C,OAAO,IAAI,CAACA,mBAAmB;IACnC;IACA,IAAI,IAAI,CAAC7E,OAAO,EAAE;MACd;IACJ;IACA,KAAK,MAAM,GAAGoF,MAAM,CAAC,IAAI,IAAI,CAACxE,OAAO,EAAE;MACnCwE,MAAM,CAAC7G,KAAK,IAAI6G,MAAM,CAAC7G,KAAK,CAAC,CAAC;IAClC;IACA,IAAI,CAAC,IAAI,CAAC2B,UAAU,EAAE;MAClB,IAAI,CAACF,OAAO,GAAG,IAAI;IACvB;IACA,IAAI,CAACN,OAAO,CAACwB,aAAa,CAAC,iBAAiB,EAAE;MAAE7E,SAAS,EAAE;IAAK,CAAC,CAAC;EACtE;EACAiC,IAAIA,CAACoG,KAAK,EAAE;IACR,IAAI,CAACtI,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAMyK,WAAW,GAAG,IAAI,CAAC7G,OAAO,IAAI0E,KAAK;IACzC,IAAI,IAAI,CAAC5E,WAAW,IAAI,CAAC,IAAI,CAAC/B,aAAa,CAAC+I,QAAQ,EAAE;MAClD,IAAI,CAAChH,WAAW,GAAG,KAAK;MACxB;IACJ;IACA,IAAI,IAAI,CAACE,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,GAAG,KAAK;IACxB;IACA,IAAI6G,WAAW,EAAE;MACb,KAAK,MAAM,GAAGzB,MAAM,CAAC,IAAI,IAAI,CAACxE,OAAO,EAAE;QACnC,IAAIwE,MAAM,CAAC9G,IAAI,EAAE;UACb8G,MAAM,CAAC9G,IAAI,CAAC,CAAC;QACjB;MACJ;IACJ;IACA,IAAI,CAACoB,OAAO,CAACwB,aAAa,CAAC,eAAe,EAAE;MAAE7E,SAAS,EAAE;IAAK,CAAC,CAAC;IAChE,IAAI,CAACyC,IAAI,CAAC+H,WAAW,IAAI,KAAK,CAAC;EACnC;EACMF,OAAOA,CAAA,EAAG;IAAA,IAAAI,MAAA;IAAA,OAAArI,iBAAA;MACZ,IAAI,CAACtC,UAAU,CAAC2K,MAAI,CAAC,EAAE;QACnB;MACJ;MACAA,MAAI,CAAC/C,IAAI,CAAC,CAAC;MACX,OAAO+C,MAAI,CAACC,KAAK,CAAC,CAAC;IAAC;EACxB;EACMzJ,KAAKA,CAAA,EAAG;IAAA,IAAA0J,MAAA;IAAA,OAAAvI,iBAAA;MACV,IAAI,CAACtC,UAAU,CAAC6K,MAAI,CAAC,EAAE;QACnB;MACJ;MACAA,MAAI,CAAC7G,qBAAqB,GAAGvB,SAAS;MACtCoI,MAAI,CAACnG,QAAQ,GAAGlE,oBAAoB,CAACqK,MAAI,CAACvH,OAAO,EAAEuH,MAAI,CAAC;MACxDA,MAAI,CAAClJ,aAAa,GAAGnB,oBAAoB,CAACqK,MAAI,CAACvH,OAAO,EAAEuH,MAAI,EAAEA,MAAI,CAACnG,QAAQ,CAAC;MAC5E,OAAOmG,MAAI,CAACN,OAAO,CAAC,CAAC;IAAC;EAC1B;EACAO,QAAQA,CAACC,gBAAgB,EAAE9J,IAAI,EAAEC,MAAM,EAAE;IACrC,IAAI,CAAClB,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAACgL,OAAO,CAACD,gBAAgB,EAAE9J,IAAI,EAAEC,MAAM,CAAC;EAChD;EACA8J,OAAOA,CAACC,eAAe,EAAEhK,IAAI,EAAEC,MAAM,EAAE;IACnC,IAAI,CAAC+J,eAAe,IAAI,CAACjL,UAAU,CAAC,IAAI,CAAC,EAAE;MACvC;IACJ;IACA,MAAMkL,aAAa,GAAG;MAAE,GAAGrK;IAAqB,CAAC;IACjD,IAAItB,UAAU,CAAC0L,eAAe,CAAC,EAAE;MAC7BC,aAAa,CAACpK,QAAQ,GAAGmK,eAAe;MACxC,IAAIhK,IAAI,EAAE;QACNiK,aAAa,CAACjK,IAAI,GAAGA,IAAI;MAC7B;MACA,IAAIC,MAAM,EAAE;QACRgK,aAAa,CAAChK,MAAM,GAAGA,MAAM;MACjC;IACJ,CAAC,MACI;MACD,MAAMiK,YAAY,GAAGD,aAAa;MAClCA,aAAa,CAACpK,QAAQ,GAAGmK,eAAe,CAACnK,QAAQ,IAAIqK,YAAY,CAACrK,QAAQ;MAC1EoK,aAAa,CAACjK,IAAI,GAAGgK,eAAe,CAAChK,IAAI,IAAIkK,YAAY,CAAClK,IAAI;MAC9DiK,aAAa,CAAChK,MAAM,GAAG+J,eAAe,CAAC/J,MAAM,IAAIiK,YAAY,CAACjK,MAAM;IACxE;IACA,IAAI,CAACoG,OAAO,CAAC1G,uBAAuB,EAAEsK,aAAa,EAAE,IAAI,CAAC;EAC9D;EACMN,KAAKA,CAAA,EAAG;IAAA,IAAAQ,MAAA;IAAA,OAAA9I,iBAAA;MACV,IAAI,CAACtC,UAAU,CAACoL,MAAI,CAAC,IAAIA,MAAI,CAACzH,OAAO,EAAE;QACnC;MACJ;MACA,MAAMyH,MAAI,CAACnK,IAAI,CAAC,CAAC;MACjBmK,MAAI,CAACzH,OAAO,GAAG,IAAI;MACnB,MAAM,IAAI0H,OAAO,CAAEC,OAAO,IAAK;QAC3BF,MAAI,CAACG,aAAa,GAAGC,UAAU,eAAAlJ,iBAAA,CAAC,aAAY;UACxC8I,MAAI,CAACzG,eAAe,CAAC8G,YAAY,CAAC,CAAC;UACnC,IAAIL,MAAI,CAACrJ,aAAa,CAACC,OAAO,YAAY0J,WAAW,IAAIN,MAAI,CAACvG,qBAAqB,EAAE;YACjFuG,MAAI,CAACvG,qBAAqB,CAAC8G,OAAO,CAACP,MAAI,CAACrJ,aAAa,CAACC,OAAO,CAAC;UAClE;UACA,KAAK,MAAM,GAAGgH,MAAM,CAAC,IAAIoC,MAAI,CAAC5G,OAAO,EAAE;YACnCwE,MAAM,CAAC4B,KAAK,WAAW5B,MAAM,CAAC4B,KAAK,CAAC,CAAC,CAAC;UAC1C;UACAQ,MAAI,CAAC9H,OAAO,CAACwB,aAAa,CAAC,kBAAkB,EAAE;YAAE7E,SAAS,EAAEmL;UAAK,CAAC,CAAC;UACnEA,MAAI,CAAClJ,IAAI,CAAC,CAAC;UACXoJ,OAAO,CAAC,CAAC;QACb,CAAC,GAAEF,MAAI,CAAC7H,MAAM,CAAC;MACnB,CAAC,CAAC;IAAC;EACP;EACAqE,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC5H,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC2D,OAAO,EAAE;MACpC;IACJ;IACA,IAAI,IAAI,CAAC4H,aAAa,EAAE;MACpBK,YAAY,CAAC,IAAI,CAACL,aAAa,CAAC;MAChC,OAAO,IAAI,CAACA,aAAa;IAC7B;IACA,IAAI,CAAC7H,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACgB,eAAe,CAACkH,eAAe,CAAC,CAAC;IACtC,IAAI,CAAC1J,KAAK,CAAC,CAAC;IACZ,IAAI,CAACU,SAAS,CAACiJ,KAAK,CAAC,CAAC;IACtB,IAAI,CAAC5H,MAAM,CAAC0D,IAAI,CAAC,CAAC;IAClB,IAAI,IAAI,CAAC7F,aAAa,CAACC,OAAO,YAAY0J,WAAW,IAAI,IAAI,CAAC7G,qBAAqB,EAAE;MACjF,IAAI,CAACA,qBAAqB,CAACkH,SAAS,CAAC,IAAI,CAAChK,aAAa,CAACC,OAAO,CAAC;IACpE;IACA,KAAK,MAAM,GAAGgH,MAAM,CAAC,IAAI,IAAI,CAACxE,OAAO,EAAE;MACnCwE,MAAM,CAACpB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAAC,CAAC;IAChC;IACA,KAAK,MAAML,GAAG,IAAI,IAAI,CAAC/C,OAAO,CAACsD,IAAI,CAAC,CAAC,EAAE;MACnC,IAAI,CAACtD,OAAO,CAACuD,MAAM,CAACR,GAAG,CAAC;IAC5B;IACA,IAAI,CAACxD,cAAc,GAAG,IAAI,CAACW,QAAQ;IACnC,IAAI,CAACpB,OAAO,CAACwB,aAAa,CAAC,kBAAkB,EAAE;MAAE7E,SAAS,EAAE;IAAK,CAAC,CAAC;EACvE;EACA2J,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACjI,aAAa,CAACqK,UAAU,GAAG,EAAE;IAClC,MAAMC,WAAW,GAAG,IAAI,CAACtK,aAAa,CAACuK,aAAa,CAAC,IAAI,CAAChI,MAAM,CAACiI,IAAI,CAACC,KAAK,EAAE,IAAI,CAACnI,MAAM,CAACqB,UAAU,EAAE,IAAI,CAACZ,QAAQ,CAAC;IACnH,IAAI,CAAC/C,aAAa,CAAC0K,QAAQ,CAAC,IAAI,CAAC/B,aAAa,CAAC;IAC/C,IAAI,IAAI,CAACgC,kBAAkB,KAAKL,WAAW,EAAE;MACzC,OAAO,KAAK;IAChB;IACA,IAAI,CAACK,kBAAkB,GAAGL,WAAW;IACrC,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}