{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  httpClient;\n  baseURL = \"\"; // TODO\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  // TODO Not Working\n  getUserById(userId, requestUser) {\n    const headers = new HttpHeaders(requestUser ? {\n      authorization: this.createBasicAuthToken(requestUser.username, requestUser.password)\n    } : {});\n    return this.httpClient.get('http://localhost:8080/getUserById/' + userId);\n  }\n  createBasicAuthToken(username, password) {\n    return 'Basic ' + window.btoa(username + \":\" + password);\n  }\n  static ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","httpClient","baseURL","constructor","getUserById","userId","requestUser","headers","authorization","createBasicAuthToken","username","password","get","window","btoa","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/src/app/service/user-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\nimport { Router } from '@angular/router';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService\n{\n  private baseURL = \"\"; // TODO\n\n  constructor(private httpClient:HttpClient)\n  { }\n\n  // TODO Not Working\n  getUserById(userId:number, requestUser:User):Observable<User>\n  {\n    const headers = new HttpHeaders(requestUser ?\n      {\n        authorization : this.createBasicAuthToken(requestUser.username,requestUser.password)\n      } : {});\n\n    return this.httpClient.get<User>('http://localhost:8080/getUserById/'+ userId)\n  }\n\n  createBasicAuthToken(username: String, password: String)\n  {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAoB,sBAAsB;;;AAO9D,OAAM,MAAOC,WAAW;EAIFC,UAAA;EAFZC,OAAO,GAAG,EAAE,CAAC,CAAC;EAEtBC,YAAoBF,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;EAC5B;EAEF;EACAG,WAAWA,CAACC,MAAa,EAAEC,WAAgB;IAEzC,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAACO,WAAW,GACzC;MACEE,aAAa,EAAG,IAAI,CAACC,oBAAoB,CAACH,WAAW,CAACI,QAAQ,EAACJ,WAAW,CAACK,QAAQ;KACpF,GAAG,EAAE,CAAC;IAET,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAO,oCAAoC,GAAEP,MAAM,CAAC;EAChF;EAEAI,oBAAoBA,CAACC,QAAgB,EAAEC,QAAgB;IAErD,OAAO,QAAQ,GAAGE,MAAM,CAACC,IAAI,CAACJ,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC;EAC1D;;qBArBWX,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}