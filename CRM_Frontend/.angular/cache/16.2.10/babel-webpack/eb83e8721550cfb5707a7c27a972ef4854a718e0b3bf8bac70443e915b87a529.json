{"ast":null,"code":"import _asyncToGenerator from \"/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  const colorStyle = getStyleFromHsl(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, () => colorStyle);\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport function loadImage(_x) {\n  return _loadImage.apply(this, arguments);\n}\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator(function* (image) {\n    return new Promise(resolve => {\n      image.loading = true;\n      const img = new Image();\n      image.element = img;\n      img.addEventListener(\"load\", () => {\n        image.loading = false;\n        resolve();\n      });\n      img.addEventListener(\"error\", () => {\n        image.element = undefined;\n        image.error = true;\n        image.loading = false;\n        getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n        resolve();\n      });\n      img.src = image.source;\n    });\n  });\n  return _loadImage.apply(this, arguments);\n}\nexport function loadGifImage(_x2) {\n  return _loadGifImage.apply(this, arguments);\n}\nfunction _loadGifImage() {\n  _loadGifImage = _asyncToGenerator(function* (image) {\n    if (image.type !== \"gif\") {\n      yield loadImage(image);\n      return;\n    }\n    image.loading = true;\n    try {\n      image.gifData = yield decodeGIF(image.source);\n      image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n      if (image.gifLoopCount === 0) {\n        image.gifLoopCount = Infinity;\n      }\n    } catch {\n      image.error = true;\n    }\n    image.loading = false;\n  });\n  return _loadGifImage.apply(this, arguments);\n}\nexport function downloadSvgImage(_x3) {\n  return _downloadSvgImage.apply(this, arguments);\n}\nfunction _downloadSvgImage() {\n  _downloadSvgImage = _asyncToGenerator(function* (image) {\n    if (image.type !== \"svg\") {\n      yield loadImage(image);\n      return;\n    }\n    image.loading = true;\n    const response = yield fetch(image.source);\n    if (!response.ok) {\n      getLogger().error(`${errorPrefix} Image not found`);\n      image.error = true;\n    } else {\n      image.svgData = yield response.text();\n    }\n    image.loading = false;\n  });\n  return _downloadSvgImage.apply(this, arguments);\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n  const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1),\n    imageRes = {\n      color,\n      gif: imageData.gif,\n      data: {\n        ...image,\n        svgData: svgColoredData\n      },\n      loaded: false,\n      ratio: imageData.width / imageData.height,\n      replaceColor: imageData.replaceColor ?? imageData.replace_color,\n      source: imageData.src\n    };\n  return new Promise(resolve => {\n    const svg = new Blob([svgColoredData], {\n        type: \"image/svg+xml\"\n      }),\n      domUrl = URL || window.URL || window.webkitURL || window,\n      url = domUrl.createObjectURL(svg),\n      img = new Image();\n    img.addEventListener(\"load\", () => {\n      imageRes.loaded = true;\n      imageRes.element = img;\n      resolve(imageRes);\n      domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", /*#__PURE__*/_asyncToGenerator(function* () {\n      domUrl.revokeObjectURL(url);\n      const img2 = {\n        ...image,\n        error: false,\n        loading: true\n      };\n      yield loadImage(img2);\n      imageRes.loaded = true;\n      imageRes.element = img2.element;\n      resolve(imageRes);\n    }));\n    img.src = url;\n  });\n}","map":{"version":3,"names":["errorPrefix","getLogger","getStyleFromHsl","decodeGIF","getGIFLoopAmount","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","includes","replace","preFillIndex","indexOf","substring","loadImage","_x","_loadImage","apply","arguments","_asyncToGenerator","image","Promise","resolve","loading","img","Image","element","addEventListener","undefined","error","source","src","loadGifImage","_x2","_loadGifImage","type","gifData","gifLoopCount","Infinity","downloadSvgImage","_x3","_downloadSvgImage","response","fetch","ok","text","replaceImageColor","imageData","particle","svgColoredData","value","imageRes","gif","data","loaded","ratio","width","height","replaceColor","replace_color","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/node_modules/tsparticles-shape-image/esm/Utils.js"],"sourcesContent":["import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}