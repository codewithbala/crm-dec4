{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication.service\";\nexport class HttpInterceptorService {\n  auth;\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(req, next) {\n    console.log(\"intercepted\");\n    // @ts-ignore\n    let user = JSON.parse(window.sessionStorage.getItem('SNVA_CRM_USER'));\n    if (this.auth.authenticated && req.url.indexOf(\"basicauth\") === -1 || user != null) {\n      console.log(\"authenticated\");\n      const authReq = req.clone({\n        headers: new HttpHeaders({\n          Authorization: `${this.auth.getAuthenticatedUser()}`\n        })\n      });\n      return next.handle(authReq);\n    } else {\n      return next.handle(req);\n    }\n  }\n  static ɵfac = function HttpInterceptorService_Factory(t) {\n    return new (t || HttpInterceptorService)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpInterceptorService,\n    factory: HttpInterceptorService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpInterceptorService","auth","constructor","intercept","req","next","console","log","user","JSON","parse","window","sessionStorage","getItem","authenticated","url","indexOf","authReq","clone","headers","Authorization","getAuthenticatedUser","handle","i0","ɵɵinject","i1","AuthenticationService","factory","ɵfac","providedIn"],"sources":["/Users/namcuong757/snva/copy_main2/crm-dec4/CRM_Frontend/src/app/service/http-interceptor.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { AuthenticationService } from \"./authentication.service\";\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpHeaders,\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport {User} from \"../model/user\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpInterceptorService {\n  constructor(private auth: AuthenticationService) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>>\n  {\n    console.log(\"intercepted\");\n    // @ts-ignore\n    let user:User = JSON.parse( window.sessionStorage.getItem('SNVA_CRM_USER') );\n    if ((this.auth.authenticated && req.url.indexOf(\"basicauth\") === -1 )|| user != null)\n    {\n      console.log(\"authenticated\");\n      const authReq = req.clone(\n        {\n        headers: new HttpHeaders(\n          {\n          Authorization: `${this.auth.getAuthenticatedUser()}`,\n        }),\n      });\n      return next.handle(authReq);\n    }\n    else\n    {\n      return next.handle(req);\n    }\n  }\n}\n"],"mappings":"AAEA,SAKEA,WAAW,QACN,sBAAsB;;;AAM7B,OAAM,MAAOC,sBAAsB;EACbC,IAAA;EAApBC,YAAoBD,IAA2B;IAA3B,KAAAA,IAAI,GAAJA,IAAI;EAA0B;EAClDE,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAGjBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B;IACA,IAAIC,IAAI,GAAQC,IAAI,CAACC,KAAK,CAAEC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAAE;IAC5E,IAAK,IAAI,CAACZ,IAAI,CAACa,aAAa,IAAIV,GAAG,CAACW,GAAG,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAKR,IAAI,IAAI,IAAI,EACpF;MACEF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAMU,OAAO,GAAGb,GAAG,CAACc,KAAK,CACvB;QACAC,OAAO,EAAE,IAAIpB,WAAW,CACtB;UACAqB,aAAa,EAAE,GAAG,IAAI,CAACnB,IAAI,CAACoB,oBAAoB,EAAE;SACnD;OACF,CAAC;MACF,OAAOhB,IAAI,CAACiB,MAAM,CAACL,OAAO,CAAC;KAC5B,MAED;MACE,OAAOZ,IAAI,CAACiB,MAAM,CAAClB,GAAG,CAAC;;EAE3B;;qBA1BWJ,sBAAsB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA;EAAA;;WAAtB1B,sBAAsB;IAAA2B,OAAA,EAAtB3B,sBAAsB,CAAA4B,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}