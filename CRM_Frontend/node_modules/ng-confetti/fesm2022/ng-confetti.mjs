import { isPlatformServer } from '@angular/common';
import * as i0 from '@angular/core';
import { PLATFORM_ID, Component, Inject, Input, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { confetti } from 'tsparticles-confetti';

class NgConfettiComponent {
    constructor(platformId) {
        this.platformId = platformId;
        this.destroy$ = new Subject();
        this.id = 'tsparticles';
        this.fire = true;
    }
    ngAfterViewInit() {
        if (isPlatformServer(this.platformId)) {
            return;
        }
        (async () => {
            if (this.fire) {
                this.container = await confetti(this.id, this.options);
            }
        })();
    }
    ngOnChanges(changes) {
        if (isPlatformServer(this.platformId)) {
            return;
        }
        const fireChanges = changes['fire'];
        if (this.fire && fireChanges && fireChanges.previousValue !== fireChanges.currentValue) {
            (async () => {
                this.container = await confetti(this.id, this.options);
            })();
        }
    }
    ngOnDestroy() {
        this.container?.destroy();
        this.destroy$.next();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: NgConfettiComponent, selector: "ng-confetti", inputs: { options: "options", id: "id", fire: "fire" }, usesOnChanges: true, ngImport: i0, template: '<div [id]="id"></div>', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'ng-confetti',
                    template: '<div [id]="id"></div>',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }]; }, propDecorators: { options: [{
                type: Input
            }], id: [{
                type: Input
            }], fire: [{
                type: Input
            }] } });

class NgConfettiModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiModule, declarations: [NgConfettiComponent], exports: [NgConfettiComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgConfettiModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgConfettiComponent],
                    imports: [],
                    exports: [NgConfettiComponent],
                }]
        }] });

/*
 * Public API Surface of ng-confetti
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgConfettiComponent, NgConfettiModule };
//# sourceMappingURL=ng-confetti.mjs.map
