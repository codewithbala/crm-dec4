{"version":3,"file":"ng-particles.mjs","sources":["../../../projects/ng-particles/src/lib/ng-particles.component.ts","../../../projects/ng-particles/src/lib/ng-particles.module.ts","../../../projects/ng-particles/src/public-api.ts","../../../projects/ng-particles/src/ng-particles.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, Inject, Input, OnDestroy, Output, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { EMPTY, from, mergeMap, Subject, takeUntil } from 'rxjs';\nimport { tsParticles } from 'tsparticles-engine';\nimport type { Container, Engine } from 'tsparticles-engine';\nimport { IParticlesProps } from './ng-particles.module';\n\n@Component({\n    selector: 'ng-particles',\n    template: '<div [id]=\"id\"></div>',\n})\nexport class NgParticlesComponent implements AfterViewInit, OnDestroy {\n    @Input() options?: IParticlesProps;\n    @Input() url?: string;\n    @Input() id: string;\n    @Input() particlesInit?: (engine: Engine) => Promise<void>;\n    @Output() particlesLoaded: EventEmitter<Container> = new EventEmitter<Container>();\n\n    private destroy$ = new Subject<void>();\n    private container?: Container;\n\n    constructor(@Inject(PLATFORM_ID) protected platformId: string) {\n        this.id = 'tsparticles';\n    }\n\n    public ngAfterViewInit(): void {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n\n        const cb = (container?: Container) => {\n            this.container = container;\n            this.particlesLoaded.emit(container);\n        };\n\n        from(this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve())\n            .pipe(\n                mergeMap(() => {\n                    if (this.url) {\n                        return tsParticles.loadJSON(this.id, this.url);\n                    } else if (this.options) {\n                        return tsParticles.load(this.id, this.options);\n                    } else {\n                        console.error('You must specify options or url to load tsParticles');\n                        return EMPTY;\n                    }\n                }),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(cb);\n    }\n\n    public ngOnDestroy(): void {\n        this.container?.destroy();\n        this.destroy$.next();\n    }\n}\n\n@Component({\n    selector: 'Particles',\n    template: '<div [id]=\"id\"></div>',\n})\nexport class ParticlesComponent extends NgParticlesComponent {\n    constructor(@Inject(PLATFORM_ID) protected override platformId: string) {\n        super(platformId);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NgParticlesComponent, ParticlesComponent } from './ng-particles.component';\nimport type { ISourceOptions } from 'tsparticles-engine';\n\n@NgModule({\n    declarations: [NgParticlesComponent, ParticlesComponent],\n    exports: [NgParticlesComponent, ParticlesComponent],\n})\nexport class NgParticlesModule {}\n\nexport type IParticlesProps = ISourceOptions;\nexport type IParticlesParams = IParticlesProps;\n","/*\n * Public API Surface of ng-particles\n */\n\nexport * from './lib/ng-particles.component';\nexport * from './lib/ng-particles.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}