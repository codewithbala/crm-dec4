import { isPlatformServer } from '@angular/common';
import { Component, Inject, Input, PLATFORM_ID } from '@angular/core';
import { fireworks } from 'tsparticles-fireworks';
import * as i0 from "@angular/core";
export class NgFireworksComponent {
    constructor(platformId) {
        this.platformId = platformId;
        this.id = 'tsparticles';
    }
    ngAfterViewInit() {
        if (isPlatformServer(this.platformId)) {
            return;
        }
        fireworks(this.id, this.options);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgFireworksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: NgFireworksComponent, selector: "ng-fireworks", inputs: { options: "options", id: "id" }, ngImport: i0, template: ` <div [id]="id"></div>`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: NgFireworksComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-fireworks', template: ` <div [id]="id"></div>` }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }]; }, propDecorators: { options: [{
                type: Input
            }], id: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctZmlyZXdvcmtzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWZpcmV3b3Jrcy9zcmMvbGliL25nLWZpcmV3b3Jrcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQW1CLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQU9uRSxNQUFNLE9BQU8sb0JBQW9CO0lBSTdCLFlBQTJDLFVBQWtCO1FBQWxCLGVBQVUsR0FBVixVQUFVLENBQVE7UUFDekQsSUFBSSxDQUFDLEVBQUUsR0FBRyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUVNLGVBQWU7UUFDbEIsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDbkMsT0FBTztTQUNWO1FBRUQsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7OEdBZFEsb0JBQW9CLGtCQUlULFdBQVc7a0dBSnRCLG9CQUFvQiw4RkFIbkIsd0JBQXdCOzsyRkFHekIsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNJLGNBQWMsWUFDZCx3QkFBd0I7OzBCQU9yQixNQUFNOzJCQUFDLFdBQVc7NENBSHRCLE9BQU87c0JBQWYsS0FBSztnQkFDRyxFQUFFO3NCQUFWLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1BsYXRmb3JtU2VydmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dCwgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpcmV3b3JrT3B0aW9ucywgZmlyZXdvcmtzIH0gZnJvbSAndHNwYXJ0aWNsZXMtZmlyZXdvcmtzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICduZy1maXJld29ya3MnLFxuICAgIHRlbXBsYXRlOiBgIDxkaXYgW2lkXT1cImlkXCI+PC9kaXY+YCxcbiAgICBzdHlsZXM6IFtdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0ZpcmV3b3Jrc0NvbXBvbmVudCB7XG4gICAgQElucHV0KCkgb3B0aW9ucz86IEZpcmV3b3JrT3B0aW9ucztcbiAgICBASW5wdXQoKSBpZDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcHJvdGVjdGVkIHBsYXRmb3JtSWQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLmlkID0gJ3RzcGFydGljbGVzJztcbiAgICB9XG5cbiAgICBwdWJsaWMgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgICAgICBpZiAoaXNQbGF0Zm9ybVNlcnZlcih0aGlzLnBsYXRmb3JtSWQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBmaXJld29ya3ModGhpcy5pZCwgdGhpcy5vcHRpb25zKTtcbiAgICB9XG59XG4iXX0=